import { LightningElement } from 'lwc';

export default class QuickContact extends LightningElement {
    richtext = "Here's an example Apex class that schedules another Apex class to run every 15 minutes:\n\n```apex\nglobal class ScheduleExample implements Schedulable {\n    global void execute(SchedulableContext sc) {\n        // Call the scheduled class or code here...\n        // For this example, we'll just print a log message\n        System.debug('Scheduled job has run at ' + DateTime.now());\n    }\n    \n    public static void setupSchedule() {\n        // Create a new instance of this class to schedule\n        ScheduleExample scheduler = new ScheduleExample();\n        \n        // Schedule the job to run every 15 minutes\n        String cronString = '0 0,15,30,45 * * * ?';\n        System.schedule('ExampleScheduler', cronString, scheduler);\n    }\n}\n```\n\nIn this example, the `ScheduleExample` class implements the `Schedulable` interface, which requires a `execute` method to be defined. Inside the `execute` method, you would add the actual code or call to the code that you want to run on a schedule.\n\nThe `setupSchedule` method is a helper method that sets up the actual scheduling job that will periodically run the `execute` method of this class. In this example, we use the `System.schedule` method to create a scheduled job, passing in the name of the job, a cron expression that defines the schedule (in this case, every 15 minutes), and the instance of the `ScheduleExample` class that we want to run on that schedule.\n\nTo run this scheduler, you would call the `setupSchedule` method somewhere in your application code, such as in a custom setting or in a trigger. Note that scheduled jobs are dependent on the `AsyncApexJob` object in Salesforce, so be aware of any limitations or quotas in your org related to asynchronous jobs."
}